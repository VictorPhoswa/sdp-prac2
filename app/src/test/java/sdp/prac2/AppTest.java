/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package sdp.prac2;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.*;

class AppTest {

    //TASK 2 tests
    @Test void testTask2() {

        SimpleFunctions Tests = new SimpleFunctions();

        List<String> input = Arrays.asList("hello", "world", "a", "", "testing", "123", "ab");
        List<String> expected = Arrays.asList("ello", "orld", "", "esting", "23", "b");

        List<String> result = Tests.task2(input);

        assertEquals(expected, result);
    }//TASK 2 tests

    @Test void testTask2EmptyList() {
        SimpleFunctions Tests = new SimpleFunctions();

        List<String> input = Collections.emptyList();
        List<String> expected = Collections.emptyList();

        List<String> result = Tests.task2(input);

        assertEquals(expected, result);
    }//TASK 2 tests

    @Test void testTask3() {
        SimpleFunctions Tests = new SimpleFunctions();
        List<String> input = Arrays.asList("function()", "(fun)", "z)()", "", "(())", "12())", "tester(((()))");
        List<boolean> expected = Arrays.asList(true, true, false, true, true, false,false);

        List<String> result = Tests.TASK3(input);
        assertEquals(expected,result);
    }
    //write a test for Task6 method
    @Test void task6RoundsUpElementsToNearestHundred() {
        // Arrange
        App classBeingTested = new App();
        List<Integer> data = Arrays.asList(0,1,101,99,200,151,999);
        List<Integer> expected = Arrays.asList(100,100,100,100,200,200,1000);
        // Act
        List<Integer> result = classBeingTested.Task6(data);
        // Assert
        assertEquals(expected, result);
        }


    @Test void Task4tests(){
        // for list with equal number of elements 
        List<Integer> List1 = Arrays.asList(3,6,9); // arrange 
        List<Integer> List2 = Arrays.asList(8,9,5);
        List<Integer> output = Arrays.asList(15,54,72);
        List<Integer> result = SimpleFunctions.TASK4(List1, List2); //assert 
        Assertions.assertEquals(output, result);   //act

        // for list with unequal number of elements
         List<Integer> List1 = Arrays.asList(9, 8, 3);  // arrange
         List<Integer> List2 = Arrays.asList(7, 5);
         List<Integer> output = null;      
         List<Integer> result = SimpleFunctions.TASK4(List1, List2);  //assert
         Assertions.assertEquals(output, result);   // act
 

    }
}
